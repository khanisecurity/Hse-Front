@layout TelerikLayout
@inherits LayoutComponentBase
@inject NavigationManager navigationManager

@using Telerik.FontIcons

<div class="content">
    @Body
</div>

@code {
    bool DrawerExpanded { get; set; } = true;
    DrawerItem SelectedItem { get; set; }
    TelerikDrawer<DrawerItem> DrawerRef { get; set; }

    List<DrawerItem> NavigablePages { get; set; } = new List<DrawerItem>
    {
            new DrawerItem { Text = "Dashboard", Url = "/", Icon = "grid" },
    };

    protected override void OnInitialized()
    {
        string currPage = navigationManager.Uri;
        DrawerItem ActivePage = NavigablePages.Where(p => p.Url.ToLowerInvariant() == GetCurrentPage().ToLowerInvariant()).FirstOrDefault();
        if (ActivePage != null)
        {
            SelectedItem = ActivePage;
        }

        base.OnInitialized();
    }

    public void NavigateToPage(DrawerItem item)
    {
        SelectedItem = item;
        navigationManager.NavigateTo(SelectedItem.Url);
    }

    public string GetCurrentPage()
    {
        string uriWithoutQueryString = navigationManager.Uri.Split("?")[0];
        string currPage = uriWithoutQueryString.Substring(Math.Min(navigationManager.Uri.Length, navigationManager.BaseUri.Length));
        return string.IsNullOrWhiteSpace(currPage) ? "/" : currPage;
    }

    public string GetSelectedItemClass(DrawerItem item)
    {
        if (SelectedItem == null)
        {
            return string.Empty;
        }
        return SelectedItem.Text.ToLowerInvariant().Equals(item.Text.ToLowerInvariant()) ? "text-info" : "";
    }

    public class DrawerItem
    {
        public string Text { get; set; }
        public string Url { get; set; }
        public string Icon { get; set; }
        public bool IsSeparator { get; set; }
    }

    void LogoutClick()
    {
    }
}
